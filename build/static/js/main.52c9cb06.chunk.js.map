{"version":3,"sources":["layouts/header.tsx","layouts/footer.tsx","layouts/siteLayout.tsx","core/services/connection-api.ts","core/services/products-resource-service.ts","state/action-creators/index.tsx","product/products.tsx","core/services/customer-resource-service.ts","account/register.tsx","core/services/authentification-resource.ts","account/login.tsx","core/services/orderService-resource.ts","product/shoppingList.tsx","state/reducers/shoppingCardReducer.tsx","state/reducers/index.tsx","state/store.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","React","auth","history","useHistory","Box","sx","flexGrow","AppBar","className","position","Toolbar","Typography","variant","component","to","Button","onClick","push","color","Footer","SiteLayout","props","children","CssBaseline","Container","style","maxWidth","ConnectionAPI","API_URL","ProductResourceService","fetch","response","json","error","ProgressEvent","Error","addProductItems","productModel","dispatch","type","payload","emptyCard","_productResourceService","FormRow","useState","getProducts","setProducts","useGlobalState","numberOfItems","setNumberOfItems","productState","useSelector","state","shoppingCard","useDispatch","bindActionCreators","actionCreators","a","productData","console","log","useEffect","getProductsItem","renderProducts","map","item","Grid","xs","Card","CardMedia","height","image","_product_imageLink","alt","CardContent","gutterBottom","_product_productName","_product_price","CardActions","filter","_product_productID","length","index","findIndex","quatity","_product_quantity","swal","title","text","icon","dangerMode","addCard","size","Fragment","store","setState","Products","Badge","badgeContent","container","spacing","CustomerResourceService","model","requestOptions","method","headers","body","JSON","stringify","_customerResourceService","Register","firstName","setFirstName","lastName","setLastName","telephone","setTelephone","email","setEmail","password","setPasword","gender","setGender","customerCreationModel","register","alert","m","width","noValidate","autoComplete","FormControl","InputLabel","htmlFor","Input","id","onChange","event","target","value","minWidth","Select","labelId","MenuItem","disableElevation","AuthentificationResourceService","_authentificationResourceService","Login","loginModel","undefined","isAdmin","login","customer","sessionStorage","setItem","OrderResourceService","getItem","getUserObj","parse","user","customerID","userID","customerEmail","Authorization","token","_orderResourceService","ShoppingCard","orderCreationModel","totalPrice","forEach","element","quantity","orderItemString","create","renderShoppingList","row","TableRow","border","TableCell","scope","src","align","checkOut","TableContainer","Paper","Table","TableHead","TableBody","shoppingCardReducer","action","reducers","combineReducers","createStore","applyMiddleware","thunk","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52c9cb06.chunk.js","sourcesContent":["import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport \"./header.scss\";\nimport Button from \"@mui/material/Button\";\n\nconst Header = () => {\n  const [auth, setAuth] = React.useState(true);\n\n  const history = useHistory();\n\n  const handleLogin = () => {\n    history.push(\"/login\");\n  };\n\n  const handleRegister = () => {\n    history.push(\"/register\");\n  };\n\n  return (\n    <div>\n      <Box sx={{ flexGrow: 1 }}>\n        <AppBar className=\"header\" position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              <Link className=\"logo\" to=\"/\">\n                ECOMMERCE\n              </Link>\n            </Typography>\n            {auth && (\n              <div>\n                <Button onClick={handleLogin} color=\"inherit\">\n                  Login\n                </Button>\n                <Button onClick={handleRegister} color=\"inherit\">\n                  REGISTER\n                </Button>\n              </div>\n            )}\n          </Toolbar>\n        </AppBar>\n      </Box>\n    </div>\n  );\n};\n\nexport default Header;\n","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport \"./footer.scss\"\nimport FacebookIcon from '@mui/icons-material/Facebook';\nimport InstagramIcon from '@mui/icons-material/Instagram';\nimport TwitterIcon from '@mui/icons-material/Twitter';\n\nexport default function Footer() {\n  return (\n    <AppBar className=\"footer\" position=\"static\" color=\"primary\">\n      <Toolbar>\n        <FacebookIcon/>\n        <InstagramIcon/>\n        <TwitterIcon/>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import * as React from \"react\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Box from \"@mui/material/Box\";\nimport Container from \"@mui/material/Container\";\nimport Header from \"./header\";\nimport Footer from \"./footer\";\nimport banner from \"../assets/imgs/banner.jpg\";\nimport { INode } from \"../core/models/node\";\n\n\n\nconst SiteLayout = ({ children }: INode, props: any) => {\n  return (\n    <div>\n      <Header/>\n      <CssBaseline />\n      <Container style={{maxWidth: \"1200px\"}}>\n        <Box  >\n          {/* <img src={banner} width=\"1200px\" height=\"540\" alt=\"\" /> */}\n        </Box>\n      </Container>\n      <div className=\"container\">\n        {children}\n        </div>\n        <Footer/>\n    </div>\n  );\n};\n\nexport default SiteLayout;\n","export default class ConnectionAPI {\n    static readonly API_URL = \"http://compaign-002-site2.dtempurl.com/api/\";\n}\n","import { IProductRetrievalModel } from \"../models/product-retrieval.model\";\nimport ConnectionAPI from \"./connection-api\";\n\nexport default class ProductResourceService {\n    public static async getProducts(): Promise<Array<IProductRetrievalModel>> {\n        try {\n            const response = await fetch(`${ConnectionAPI.API_URL}Product`);\n\n            return response.json();\n        } catch (error: any) {\n            if (error && error.error instanceof ProgressEvent) {\n                throw new Error(\n                    \"A connection could not be established. Please contact an administrator.\"\n                );\n            }\n            throw Error(error.error);\n        }\n    }\n}\n","import { IProductRetrievalModel } from \"../../core/models/product-retrieval.model\";\n\nexport const addProductItems = (productModel: IProductRetrievalModel) => {\n  return (dispatch: any) => {\n    dispatch({\n      type: \"addProduct\",\n      payload: productModel,\n    });\n  };\n};\n\nexport const emptyCard = () => {\n  return (dispatch: any) => {\n    dispatch({\n      type: \"emptyCard\",\n    });\n  };\n};\n\n","import React, { useState, useEffect } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport { styled } from \"@mui/material/styles\";\nimport shoes from \"../assets/imgs/cb176970.jpeg\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport ProductResourceService from \"../core/services/products-resource-service\";\nimport { IProductRetrievalModel } from \"../core/models/product-retrieval.model\";\nimport Badge from \"@mui/material/Badge\";\nimport AddShoppingCartIcon from \"@mui/icons-material/AddShoppingCart\";\nimport { store, useGlobalState } from \"state-pool\";\nimport { useHistory } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { actionCreators } from \"../state/index\";\n\nconst _productResourceService = ProductResourceService;\nstore.setState(\"numberOfItems\", 0);\n\nfunction FormRow() {\n  const [getProducts, setProducts] = useState<Array<IProductRetrievalModel>>();\n  let [numberOfItems, setNumberOfItems] = useGlobalState(\"numberOfItems\");\n  const productState = useSelector((state: any) => state.shoppingCard);\n  const dispatch = useDispatch();\n\n  const { addProductItems } = bindActionCreators(actionCreators, dispatch);\n\n  async function getProductsItem(): Promise<void> {\n    try {\n      const productData = await _productResourceService.getProducts();\n\n      setProducts(productData);\n    } catch (error) {\n      console.log(\"Something went wrong\");\n    }\n  }\n\n  const addCard = (productModel: IProductRetrievalModel) => {\n    const lengthProductExist = productState.filter(\n      (item: IProductRetrievalModel) =>\n        item._product_productID === productModel._product_productID\n    );\n\n    if (lengthProductExist.length <= 0) {\n      addProductItems(productModel);\n      numberOfItems = productState.length;\n      setNumberOfItems(numberOfItems);\n    } else {\n      const index = productState.findIndex(\n        (item: IProductRetrievalModel) =>\n          item._product_productID === productModel._product_productID\n      );\n      const quatity = productState[index]._product_quantity + 1;\n      productState[index]._product_quantity = quatity;\n      swal({\n        title: \"Warning\",\n        text: `You have ${quatity} of the same products in your cards`,\n        icon: \"warning\",\n        dangerMode: true,\n      });\n    }\n  };\n\n  useEffect(() => {\n    getProductsItem();\n  }, []);\n\n  const renderProducts = getProducts?.map((item: any) => {\n    return (\n      <Grid item xs={3}>\n        <Card sx={{ maxWidth: 345 }}>\n          <CardMedia\n            component=\"img\"\n            height=\"140\"\n            image={`http://compaign-002-site2.dtempurl.com/${item._product_imageLink}`}\n            alt=\"green iguana\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n              {item._product_productName}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              R {item._product_price}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button onClick={() => addCard(item)} size=\"small\">\n              ADD TO CARD\n            </Button>\n          </CardActions>\n        </Card>\n      </Grid>\n    );\n  });\n\n  return <React.Fragment>{renderProducts}</React.Fragment>;\n}\n\nconst Products = () => {\n  const history = useHistory();\n  const [numberOfItems, setNumberOfItems] = useGlobalState(\"numberOfItems\");\n\n  const checkOut = () => {\n    history.push(\"/login\");\n  };\n  return (\n    <div>\n      <Badge badgeContent={numberOfItems} color=\"error\">\n        <AddShoppingCartIcon\n          onClick={() => checkOut()}\n          className=\"shoppingCard\"\n        />\n      </Badge>\n      <Box sx={{ flexGrow: 1 }}>\n        <Grid container spacing={1}>\n          <Grid container item spacing={3}>\n            <FormRow />\n          </Grid>\n        </Grid>\n      </Box>\n    </div>\n  );\n};\n\nexport default Products;\n","\nimport ConnectionAPI from \"./connection-api\";\nimport { ICustomerCreationModel } from \"../models/customer-creation,model\";\n\nexport default class CustomerResourceService {\n    public static async register(model: ICustomerCreationModel): Promise<void> {\n        try {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(model)\n            };\n            const response = await fetch(`${ConnectionAPI.API_URL}Customer`, requestOptions);\n        } catch (error: any) {\n            if (error && error.error instanceof ProgressEvent) {\n                throw new Error(\n                    \"A connection could not be established. Please contact an administrator.\"\n                );\n            }\n            throw Error(error.error);\n        }\n    }\n}\n","import React, { useState } from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\nimport { FormHelperText, Input, InputLabel } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport Select from \"@mui/material/Select\";\nimport { ICustomerCreationModel } from \"../core/models/customer-creation,model\";\nimport CustomerResourceService from \"../core/services/customer-resource-service\";\nimport { useHistory } from \"react-router-dom\";\nimport swal from \"sweetalert\";\n\nconst _customerResourceService = CustomerResourceService;\n\nconst Register = () => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [telephone, setTelephone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPasword] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  let [customerCreationModel, setCustomerCreationModel] =\n    useState<ICustomerCreationModel>();\n\n  const history = useHistory();\n\n  const handleChangeFirstName = (event: any) => {\n    setFirstName(event.target.value);\n  };\n  const handleChangeLastName = (event: any) => {\n    setLastName(event.target.value);\n  };\n  const handleChangeTelephone = (event: any) => {\n    setTelephone(event.target.value);\n  };\n  const handleChangeEmail = (event: any) => {\n    setEmail(event.target.value);\n  };\n\n  const handleChangePassword = (event: any) => {\n    setPasword(event.target.value);\n  };\n\n  const back = () => {\n    history.push(\"/\");\n  };\n\n  const handleChangeGender = (event: any) => {\n    setGender(event.target.value);\n  };\n\n  async function register(): Promise<void> {\n\n   if (firstName === \"\" || lastName === \"\" ||  telephone === \"\" || \"\" || email === \"\" || password === \"\" || gender === \"\") {\n    swal({\n      title: \"Input Validations\",\n      text: \"Fill up all required fields\",\n      icon: \"error\",\n      dangerMode: true,\n    });\n    return\n   }\n\n    customerCreationModel = {\n      firstName: firstName,\n      lastName: lastName,\n      telephone: telephone,\n      email: email,\n      password: password,\n      gender: gender,\n    };\n    try {\n      await _customerResourceService.register(customerCreationModel);\n      swal({\n        title: \"Warning\",\n        text: \"Register successfully\",\n        icon: \"success\",\n        dangerMode: true,\n      });\n      history.push(\"/\");\n    } catch (error) {\n      alert(\"Something went wrong\");\n    }\n  }\n\n  return (\n    <div>\n      <Box\n        component=\"form\"\n        sx={{\n          \"& > :not(style)\": { m: 1, width: \"25ch\" },\n        }}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <div className=\"register-form\">\n          <div>\n            <FormControl>\n              <InputLabel htmlFor=\"my-input\">First Name</InputLabel>\n              <Input\n                id=\"my-input\"\n                onChange={handleChangeFirstName}\n                aria-describedby=\"my-helper-text\"\n              />\n            </FormControl>\n          </div>\n\n          <div>\n            <FormControl>\n              <InputLabel htmlFor=\"my-input\">Last Name</InputLabel>\n              <Input\n                id=\"my-input\"\n                onChange={handleChangeLastName}\n                aria-describedby=\"my-helper-text\"\n              />\n            </FormControl>\n          </div>\n\n          <div>\n            <FormControl>\n              <InputLabel htmlFor=\"my-input\">Telephone</InputLabel>\n              <Input\n                id=\"my-input\"\n                onChange={handleChangeTelephone}\n                aria-describedby=\"my-helper-text\"\n              />\n            </FormControl>\n          </div>\n\n          <div>\n            <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n              <InputLabel id=\"demo-simple-select-standard-label\">\n                Gender\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-standard-label\"\n                id=\"demo-simple-select-standard\"\n                onChange={handleChangeGender}\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                <MenuItem value=\"M\">Male</MenuItem>\n                <MenuItem value=\"F\">Female</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n\n          <div>\n            <FormControl>\n              <InputLabel htmlFor=\"my-input\">Email</InputLabel>\n              <Input\n                id=\"my-input\"\n                onChange={handleChangeEmail}\n                aria-describedby=\"my-helper-text\"\n              />\n            </FormControl>\n          </div>\n\n          <div>\n            <FormControl>\n              <InputLabel htmlFor=\"my-input\">password</InputLabel>\n              <Input\n                id=\"my-input\"\n                type=\"password\"\n                aria-describedby=\"my-helper-text\"\n                onChange={handleChangePassword}\n              />\n            </FormControl>\n          </div>\n          <Button\n            onClick={register}\n            className=\"btn-register\"\n            variant=\"contained\"\n            disableElevation\n          >\n            Register\n          </Button>\n        </div>\n      </Box>\n    </div>\n  );\n};\n\nexport default Register;\n","\nimport ConnectionAPI from \"./connection-api\";\nimport { ILogin } from \"../models/login.model\";\nimport { AccountRetrievalModel } from \"../models/account-retrieval.model\";\n\nexport default class AuthentificationResourceService {\n    public static async login(model: ILogin): Promise<AccountRetrievalModel> {\n        try {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(model)\n            };\n            const response = await fetch(`${ConnectionAPI.API_URL}Account/authenticate`, requestOptions);\n            return response.json();\n        } catch (error: any) {\n            if (error && error.error instanceof ProgressEvent) {\n                throw new Error(\n                    \"A connection could not be established. Please contact an administrator.\"\n                );\n            }\n            throw Error(error.error);\n        }\n    }\n}\n","import Box from \"@mui/material/Box\";\nimport React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\nimport { FormHelperText, Input, InputLabel } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport { ILogin } from \"../core/models/login.model\";\nimport AuthentificationResourceService from \"../core/services/authentification-resource\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport \"./login.scss\";\n\nconst _authentificationResourceService = AuthentificationResourceService;\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPasword] = useState(\"\");\n  let [loginModel, setLoginModel] = useState<ILogin>();\n  const history = useHistory();\n\n  const handleChangeEmail = (event: any) => {\n    setEmail(event.target.value);\n  };\n\n  const handleChangePassword = (event: any) => {\n    setPasword(event.target.value);\n  };\n\n  const back = () => {\n    history.push(\"/\");\n  };\n\n  async function login(): Promise<void> {\n    if (email === \"\" || email === undefined || email === null) {\n      swal({\n        title: \"Input Validations\",\n        text: \"Email is required\",\n        icon: \"error\",\n        dangerMode: true,\n      });\n      return;\n    } else if (password === \"\" || password === undefined || password === null) {\n      swal({\n        title: \"Input Validations\",\n        text: \"Password is required\",\n        icon: \"error\",\n        dangerMode: true,\n      });\n      return;\n    }\n    loginModel = {\n      email: email,\n      password: password,\n      isAdmin: false,\n    };\n\n    try {\n      const customer = await _authentificationResourceService.login(loginModel);\n      if (\n        customer.email == \"\" ||\n        customer.email == null ||\n        customer.email === undefined\n      ) {\n        swal({\n          title: \"Warning\",\n          text: \"Username or password is incorrect!\",\n          icon: \"warning\",\n          dangerMode: true,\n        });\n        return;\n      }\n      sessionStorage.setItem(\"user\", JSON.stringify(customer));\n      history.push(\"/shopping-card\");\n    } catch (error) {\n      alert(\"Something went wrong\");\n    }\n  }\n\n  return (\n    <div className=\"container-login\">  \n        <div className=\"inner-container\">\n          <div>\n            <FormControl>\n              <InputLabel htmlFor=\"my-input\">Email</InputLabel>\n              <Input\n                id=\"my-input\"\n                onChange={handleChangeEmail}\n                aria-describedby=\"my-helper-text\"\n              />\n            </FormControl>\n          </div>\n\n          <div>\n            <FormControl>\n              <InputLabel htmlFor=\"my-input\">password</InputLabel>\n              <Input\n                id=\"my-input\"\n                type=\"password\"\n                onChange={handleChangePassword}\n                aria-describedby=\"my-helper-text\"\n              />\n            </FormControl>\n          </div>\n          <Button\n            onClick={login}\n            className=\"btn-register\"\n            variant=\"contained\"\n            disableElevation\n          >\n            LOGIN\n          </Button>\n          <Link className=\"register\" to=\"/register\">Register</Link>\n        </div>\n   \n    </div>\n  );\n};\n\nexport default Login;\n","import ConnectionAPI from \"./connection-api\";\nimport { IOrderCreationModel } from \"../models/order-creation.model\";\n\nexport default class OrderResourceService {\n    public static async create(model: IOrderCreationModel): Promise<void> {\n        try {\n            let customer = JSON.stringify(sessionStorage.getItem(\"user\"));\n            let getUserObj = JSON.parse(customer);\n            let user = JSON.parse(getUserObj);\n\n            model.customerID = user.userID;\n            model.customerEmail = user.email;\n\n            const requestOptions = {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${user.token}`,\n                },\n\n                body: JSON.stringify(model),\n            };\n            const response = await fetch(\n                `${ConnectionAPI.API_URL}Order`,\n                requestOptions\n            );\n        } catch (error: any) {\n            if (error && error.error instanceof ProgressEvent) {\n                throw new Error(\n                    \"A connection could not be established. Please contact an administrator.\"\n                );\n            }\n            throw Error(error.error);\n        }\n    }\n}\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { IProductRetrievalModel } from \"../core/models/product-retrieval.model\";\nimport Button from \"@mui/material/Button\";\nimport OrderResourceService from \"../core/services/orderService-resource\";\nimport { IOrderCreationModel } from \"../core/models/order-creation.model\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./shoppingList.scss\";\nimport swal from \"sweetalert\";\nimport {useSelector,useDispatch} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {actionCreators}  from \"../state/index\";\n\n\nconst _orderResourceService = OrderResourceService;\n\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: \"inline-block\", mx: \"2px\", transform: \"scale(0.8)\" }}\n  ></Box>\n);\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst ShoppingCard = () => {\n  const [getProducts, setProducts] = useState<Array<IProductRetrievalModel>>();\n  let [orderCreationModel, setOrderCreationModel] =\n    useState<IOrderCreationModel>();\n  const history = useHistory();\n  const productState = useSelector((state:any) => state.shoppingCard);\n  const dispatch = useDispatch();\n\n  const {emptyCard} = bindActionCreators(actionCreators, dispatch);\n  async function checkOut(): Promise<void> {\n\n    if (\n      productState.length === 0\n    ) {\n      swal({\n        title: \"Warning\",\n        text: \"There is no product in your card\",\n        icon: \"warning\",\n        dangerMode: true,\n      });\n      return;\n    }\n    let totalPrice = 0;\n\n    productState.forEach((element: IProductRetrievalModel) => {\n      totalPrice += element._product_price;\n    });\n\n    orderCreationModel = {\n      quantity: productState.length,\n      totalPrice: totalPrice,\n      customerEmail: \"\",\n      customerID: \"\",\n      orderItemString: JSON.stringify(getProducts),\n    };\n\n    try {\n      await _orderResourceService.create(orderCreationModel);\n      swal({\n        title: \"Success\",\n        text: \"Order successfully. Please check your email.\",\n        icon: \"success\",\n        dangerMode: true,\n      });\n      emptyCard();\n      history.push(\"/\");\n    } catch (error) {\n      alert(\"Something went wrong\");\n    }\n  }\n\n  useEffect(() => {\n    setProducts(productState);\n  }, []);\n\n  const renderShoppingList = getProducts?.map(\n    (row: IProductRetrievalModel, index) => {\n      return (\n        <>\n          <TableRow\n            key={row._product_productID}\n            sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n          >\n            <TableCell component=\"th\" scope=\"row\">\n              <img\n                width=\"120px\"\n                src={`http://compaign-002-site2.dtempurl.com/${row._product_imageLink}`}\n                alt=\"\"\n              />\n            </TableCell>\n            <TableCell component=\"th\" scope=\"row\">\n              {row._product_productName}\n            </TableCell>\n            <TableCell align=\"right\">{row._product_price}</TableCell>\n            <TableCell align=\"right\">{row._product_quantity}</TableCell>\n          </TableRow>\n        </>\n      );\n    }\n  );\n  return (\n    <div className=\"container\">\n      <Button\n        className=\"btn-shopping\"\n        onClick={() => checkOut()}\n        variant=\"contained\"\n      >\n        Check Out\n      </Button>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 500 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Image</TableCell>\n              <TableCell>Product Name</TableCell>\n              <TableCell align=\"right\">Price</TableCell>\n              <TableCell align=\"right\">Quantity</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>{renderShoppingList}</TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default ShoppingCard;\n","import { IProductRetrievalModel } from \"../../core/models/product-retrieval.model\";\n\nconst shoppingCardReducer = (\n  productState: Array<IProductRetrievalModel> = [],\n  action: any\n) => {\n  switch (action.type) {\n    case \"addProduct\":\n      productState.push(action.payload);\n      return productState;\n    case \"emptyCard\":\n      productState = [];\n      return productState;\n    default:\n      return productState;\n  }\n};\n\nexport default shoppingCardReducer;\n","import { combineReducers } from \"redux\";\nimport shoppingCardReducer from \"./shoppingCardReducer\";\n\nconst reducers = combineReducers({\n  shoppingCard: shoppingCardReducer,\n});\n\nexport default reducers;\n","import { createStore,applyMiddleware } from \"redux\";\nimport reducers from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\n\nexport default store;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SiteLayout from \"../src/layouts/siteLayout\";\nimport Products from \"../src/product/products\";\nimport Register from \"../src/account/register\";\nimport Login from \"../src/account/login\";\nimport ShoppingCard from \"../src/product/shoppingList\"\nimport {Provider} from \"react-redux\";\nimport  store from \"../src/state/store\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     \n      <Router>\n      <Provider store={store}>\n        <SiteLayout>\n\n          <Switch>\n            <Route path=\"/\" exact>\n              <Products />\n            </Route>\n\n            <Route path=\"/register\">\n              <Register />\n            </Route>\n\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n\n            <Route path=\"/shopping-card\">\n              <ShoppingCard />\n            </Route>\n\n          </Switch>\n        </SiteLayout>\n        </Provider>\n      </Router>\n     \n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}